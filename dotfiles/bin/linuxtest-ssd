#!/bin/bash

set -x

OPTIND=1 
daemonize=""
display=""
persistent="-snapshot"
enable_cdrom=false
cdrom=""
CD="/var/lib/libvirt/images/debian-8.1.0-amd64-netinst.iso"
order=dcn
usb_devices=()




show_help() {
    echo "Options:"
    echo "	-h This Help"
    echo "	-d Daemonize kvm"
    echo "	-t Display console as curses text"
    echo "	-v Display console via VNC"
    echo "	-p Persistent storage changes"
    echo "  -c Enable CDROM with default image (Debian 8.1 netinst)"
    echo "	-I <Image> Use this Image as CDROM"
    echo "  -b <order> Boot Order."
    echo "             n -> Netzwek"
    echo "             d -> CDROM"
    echo "             c -> first HDD"
    echo "             default: dcn"
    echo "  -u <device:identifier> attach given usb device to VM"
}

generate_usb_device() {
    identifier=$1
    usb_device=$(lsusb |grep "$identifier")
    if [[ -n "$usb_device" ]]; then
      echo "-usb -device usb-host,vendorid=0x${identifier%:*},productid=0x${identifier#*:}"
#      echo "$usb_device" |\
#        sed 's/Bus \([0-9]*\) Device \([0-9]*\):.*/-device usb-host,hostbus=\1,hostaddr=\2/'
    fi
}

while getopts "h?dtcvpI:b:u:" opt; do
    case "$opt" in
    h|\?)
        show_help
        exit 0
        ;;
    d)  daemonize="-daemonize"
        ;;
    t)  display="-curses"
        ;;
    v)  display="-vnc 127.0.0.1:8"
        ;;
    p)  persistent=""
        ;;
    c)  enable_cdrom=true
        ;;
    I)  CD=$OPTARG
        ;;
    b)  order=$OPTARG
        ;;
    u)  usb_devices+=( "$(generate_usb_device $OPTARG)" )
    esac
done

echo "USB Devices: ${usb_devices[@]}"
echo "Length: ${#usb_devices[@]}"

#if [[ $display == "" ]]; then
#    echo "NO DISPLAY SET"
#    echo "You have to set at least one display option" 
#    show_help
#    exit 1
#fi

if $enable_cdrom; then
    cdrom="-drive file=$CD,readonly=on,format=raw,media=cdrom"
fi



#-M pc-0.12 \
sudo /usr/bin/kvm \
	-boot order=$order \
	-cpu Haswell-noTSX-IBRS \
	-device ich9-usb-ehci1,id=usb,bus=pci.0,addr=0x5.0x7 \
	-device ich9-usb-uhci1,masterbus=usb.0,firstport=0,bus=pci.0,multifunction=on,addr=0x5 \
	-device ich9-usb-uhci2,masterbus=usb.0,firstport=2,bus=pci.0,addr=0x5.0x1 \
	-device ich9-usb-uhci3,masterbus=usb.0,firstport=4,bus=pci.0,addr=0x5.0x2 \
	-device virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x6 \
    -device virtio-blk-pci,scsi=off,bus=pci.0,addr=0x7,drive=drive-virtio-disk0,id=virtio-disk0 \
	-drive file=/media/tobias/SSD/LinuxTest.readonly.qcow2,format=qcow2,if=none,cache=writeback,id=drive-virtio-disk0 \
    $cdrom \
	-enable-kvm \
	-global kvm-pit.lost_tick_policy=delay \
	-global PIIX4_PM.disable_s3=1 \
	-global PIIX4_PM.disable_s4=1 \
	-m 8192 \
	-machine pc-i440fx-artful,accel=kvm,usb=off,vmport=off,dump-guest-core=off \
	-monitor telnet:127.0.0.1:4444,server,nowait \
	-name Buildtest \
	-net nic,macaddr=52:54:00:1a:12:be,model=virtio \
	-net tap \
	-nodefaults \
	-rtc base=utc \
	-smp 6,sockets=6,cores=1,threads=1 \
	-device usb-tablet \
	-vga cirrus \
    -uuid 00dbd6c7-adfe-8d88-7ab9-e7e0f21df077 \
    $persistent \
    $display \
    $daemonize \
    ${usb_devices[@]} \



#-drive file=/var/lib/libvirt/images/LinuxTest.readonly.qcow,if=virtio,cache=writeback,snapshot=on \
#-sdl
#-k de \

#-vnc 127.0.0.1:0 \
